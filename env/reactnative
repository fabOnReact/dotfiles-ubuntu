#!/bin/sh
# alias ysr="./scripts/packager.sh"
alias rnserver="cd $CODE/opensource/react-native-second/packages/rn-tester && yst"
alias bta="./scripts/run-android-local-unit-tests.sh"
alias btf="buck test ReactAndroid/src/test/java/com/facebook/react/views:views --test-selectors 'com.facebook.react.views.image.ReactImagePropertyTest#testRoundedCorners'"
alias ybr="./gradlew :packages:rn-tester:android:app:installJscDebug -PreactNativeArchitectures=x86"
# alias ybr="./gradlew :packages:rn-tester:android:app:installJscDebug"
# alias ybr="./gradlew :packages:rn-tester:android:app:installHermesDebug"
alias ysa="adb shell am start -n 'com.facebook.react.uiapp/com.facebook.react.uiapp.RNTesterActivity' -a android.intent.action.MAIN -c android.intent.category.LAUNCHER"
# alias ybr="ybuildrn && ysa"
alias rnand='yarn react-native run-android'
alias aoff="adb shell settings put secure enabled_accessibility_services com.android.talkback/com.google.android.marvin.talkback.TalkBackService"
alias aon="adb shell settings put secure enabled_accessibility_services com.google.android.marvin.talkback/com.google.android.marvin.talkback.TalkBackService"
alias cocrn="echo 'y' | cp ~/.dotfiles/files/config_js.json ~/.config/nvim/coc-settings.json"
alias aw="cd /home/fabrizio/Documents/sourcecode/reactnative/AwesomeProject"

# ctags
alias ctags_java="ctags --languages=java -R ."
alias ctags_cpp="ctags -R --c++-kinds=+pf --fields=+imaSft --extra=+q --languages=c++ ."

# gradle tasks
alias gradleclean="./gradlew cleanAll"

# https://github.com/CommE2E/comm/blob/master/docs/dev_environment.md#nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# functions
# build rn-tester
function build() {
  { # try
    ybr && notify-send "gradle_build_completed" && ysa
  } || { # catch
    notify-send "gradle_build_failed"
  }
}

function buildGrepErrors() {
  build G "Build failed"
}
