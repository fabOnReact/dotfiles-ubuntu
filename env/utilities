#!/bin/sh
# Utilities
export PATH=$PATH:/opt/NzbDrone
export PATH=$PATH:/opt/Radarr

alias r="ranger"
alias desktop_shorcut="~/.local/share/applications/"
# Other
alias pbcopy="xsel --clipboard --input"
alias pbpaste="xsel --clipboard --output"
alias sickbeard="python ~/Documents/sickbeard/my-sickbeard-install/SickBeard.py"
alias couchpotato="python ~/Documents/Couchpotato/CouchPotatoServer/CouchPotato.py"
alias lss="find . -type f -printf "%s\t%p\n" | sort -n | tail -10"
alias nvidia_configs="sh -c '/usr/bin/nvidia-settings --load-config-only'"
alias generate_tags="ctags --tag-relative -R --sort=yes --languages=ruby,javascript --exclude=.git --exclude=log . $(bundle list --paths)"
alias lvh='rails s -p 3000 -b lvh.me'
# alias vim='gvim -v'
alias vim='nvim'

# Git
unalias glg
alias glg='git log --oneline --decorate  --max-count=5'
export BAT_THEME="GitHub"
# export BAT_THEME="TwoDark"

# TMUX functions
# https://www.baeldung.com/linux/bash-alias-with-parameters

# creates a new window and cd in alias
function nw() { 
  echo "---> new window $1"
  tmux new-window
  tmux send-keys "$1" 'C-m'
  tmux rename-window "$1"
  tmux send-keys "vim" 'C-m'
}

# rename window
function rw() { 
  echo "---> rename window $1"
  tmux rename-window "$1"
}

# rename session
function rs() {
  echo "---> rename session $1 - $2"
  tmux rename-session "$1 - $2"
}

# open a split horizontal
function sh() {
  echo "---> open horizontal split"
  tmux split-window -l 4
}

# open a split vertical
function sv() {
  echo "---> open vertical split"
  tmux split-window -h 
}

# open vim
function vm() {
  echo "---> open vim"
  tmux send-keys 'vim' 'C-m'
}

# open a new work folder
# open reactnative session
# new_project reactnative
function new_project() {
  echo "---> opening a new project folder $1"
  rs "a" "projects" &&
  nw "$1" && rw "$1"
  vm && 
  sv && 
  tmux send-keys "$1" "C-m" &&
  # nw "$1" && rw "git" &&
  tmux kill-window -t "zsh"
}

function np() {
  new_project $1
}

# automatically build the project
# function build() {
#   echo "build called with parameter $1"
#   if ($1 == "reactnative") {
#   }
# }

# create new_window
# rename it to git
function ng() {
  tmux new-window 
  tmux rename-window "git"
  tmux send-keys "glg" "C-m"
}

# open metro service
# service metro
# does not work https://unix.stackexchange.com/questions/305039/pausing-a-bash-script-until-previous-commands-are-finished
# https://stackoverflow.com/questions/2398388/is-it-possible-for-bash-commands-to-continue-before-the-result-of-the-previous-c
# https://phoenixnap.com/kb/bash-wait-command
function service() {
  echo "---> start service $1"
  rs "s" "services" &&
  rw $1 &&
  tmux send-keys $1 "C-m"
}
